{"ast":null,"code":"var _jsxFileName = \"/Users/joachimdemuth/Desktop/React/website2/src/routes/NftGallery.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { BallTriangle } from \"react-loader-spinner\";\nimport { continuedFetchNfts, fetchNfts } from \"../lib/Nfts\";\nimport { useEffect, useState } from \"react\";\nimport \"./NftGallery.css\";\nimport NftCard from \"../components/NftCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NftGallery() {\n  _s();\n  const [firstFecth, setFirstFetch] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [cont, setCont] = useState(false);\n  const [secondFetch, setSecondFetch] = useState(null);\n  useEffect(() => {\n    fetchNfts();\n  });\n\n  // useEffect(() => {\n  //   setLoading(true)\n  //   fetchNfts()\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       setFirstFetch(data);\n  //       console.log(firstFecth);\n\n  //       if(firstFecth.continuation !== null) {\n  //         setCont(true);\n  //         console.log(cont)\n  //       } \n\n  //     });\n\n  //     if(cont) {\n\n  //    setTimeout(() => {\n  //         continuedFetchNfts()\n  //         .then((res2) => res2.json())\n  //         .then((data2) => {\n  //           setSecondFetch(data2);\n  //           console.log(secondFetch);\n  //         });\n  //         setCont(false)\n\n  //       }, 1000);\n  //     }\n  //     setLoading(false)\n  // },[]);\n\n  // if(nftData.continuation === \"Mg==\") {\n  //   setCont(true)\n  //   console.log(cont)\n  //   continuedFetchNfts()\n  //   .then((res) => res.json())\n  //   .then((data) => {\n  //     console.log(contData)\n  //     console.log(cont)\n  //   })\n  //   setAllNfts(Object.assign(nftData, contData))\n  //   console.log(allNfts)\n  //  }\n\n  //  if(cont) {\n\n  //     setAllNfts({...nftData,...contData})\n  //     console.log(allNfts)\n  //     setCont(false);\n\n  //  }\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner-container\",\n        children: /*#__PURE__*/_jsxDEV(BallTriangle, {\n          height: 100,\n          width: 100,\n          radius: 5,\n          color: \"blue\",\n          ariaLabel: \"ball-triangle-loading\",\n          wrapperClass: {},\n          wrapperStyle: \"\",\n          visible: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-text-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Fetching NFTs for you..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n  if (!firstFecth) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 27\n  }, this);\n  const nfts = firstFecth.nfts;\n  const sortedNfts = nfts.filter(nft => nft.metadata);\n\n  // console.log(sortedNfts)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NFT Gallery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-container\",\n        children: sortedNfts.map(nft => {\n          let str = nft.metadata.name;\n          let title = str.slice(0, -5);\n          let num = str.substring(str.length - 5);\n          return /*#__PURE__*/_jsxDEV(NftCard, {\n            url: nft.cached_file_url,\n            title: title,\n            desc: nft.metadata.description,\n            number: num,\n            link: nft.cached_file_url\n          }, nft.mint_address, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n          // <div key={nft.metadata_url} >\n          //     <img src={nft.cached_file_url} alt={nft.collection_id} />\n          // </div>\n          ;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(NftGallery, \"Nw5i9+TZqvw3j/th1SCWh6DqF8Q=\");\n_c = NftGallery;\nexport default NftGallery;\nvar _c;\n$RefreshReg$(_c, \"NftGallery\");","map":{"version":3,"names":["React","BallTriangle","continuedFetchNfts","fetchNfts","useEffect","useState","NftCard","NftGallery","firstFecth","setFirstFetch","isLoading","setLoading","cont","setCont","secondFetch","setSecondFetch","nfts","sortedNfts","filter","nft","metadata","map","str","name","title","slice","num","substring","length","cached_file_url","description","mint_address"],"sources":["/Users/joachimdemuth/Desktop/React/website2/src/routes/NftGallery.jsx"],"sourcesContent":["import React from \"react\";\nimport { BallTriangle } from \"react-loader-spinner\";\nimport { continuedFetchNfts, fetchNfts } from \"../lib/Nfts\";\nimport { useEffect, useState } from \"react\";\nimport \"./NftGallery.css\";\nimport NftCard from \"../components/NftCard\";\n\n\nfunction NftGallery() {\n  const [firstFecth, setFirstFetch] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [cont, setCont] = useState(false);\n  const [secondFetch, setSecondFetch] = useState(null);\n\n  \n  useEffect(() => {\n    fetchNfts()\n  })\n\n  // useEffect(() => {\n  //   setLoading(true)\n  //   fetchNfts()\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       setFirstFetch(data);\n  //       console.log(firstFecth);\n\n  //       if(firstFecth.continuation !== null) {\n  //         setCont(true);\n  //         console.log(cont)\n  //       } \n        \n  //     });\n\n  //     if(cont) {\n\n  //    setTimeout(() => {\n  //         continuedFetchNfts()\n  //         .then((res2) => res2.json())\n  //         .then((data2) => {\n  //           setSecondFetch(data2);\n  //           console.log(secondFetch);\n  //         });\n  //         setCont(false)\n          \n  //       }, 1000);\n  //     }\n  //     setLoading(false)\n  // },[]);\n\n\n  // if(nftData.continuation === \"Mg==\") {\n  //   setCont(true)\n  //   console.log(cont)\n  //   continuedFetchNfts()\n  //   .then((res) => res.json())\n  //   .then((data) => {\n  //     console.log(contData)\n  //     console.log(cont)\n  //   })\n  //   setAllNfts(Object.assign(nftData, contData))\n  //   console.log(allNfts)\n  //  }\n\n  //  if(cont) {\n\n  //     setAllNfts({...nftData,...contData})\n  //     console.log(allNfts)\n  //     setCont(false);\n\n  //  }\n\n  if (isLoading)\n    return (\n      <>\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner-container\">\n            <BallTriangle\n              height={100}\n              width={100}\n              radius={5}\n              color=\"blue\"\n              ariaLabel=\"ball-triangle-loading\"\n              wrapperClass={{}}\n              wrapperStyle=\"\"\n              visible={true}\n            />\n          </div>\n          <div className=\"loading-text-container\">\n            <p>Fetching NFTs for you..</p>\n          </div>\n        </div>\n      </>\n    );\n  if (!firstFecth) return <p>No data available</p>;\n  const nfts = firstFecth.nfts;\n  const sortedNfts = nfts.filter((nft) => nft.metadata);\n\n  // console.log(sortedNfts)\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>NFT Gallery</h1>\n        <div className=\"nft-container\">\n          {sortedNfts.map((nft) => {\n            let str = nft.metadata.name;\n            let title = str.slice(0, -5);\n\n            let num = str.substring(str.length - 5);\n\n            return (\n              <NftCard\n                key={nft.mint_address}\n                url={nft.cached_file_url}\n                title={title}\n                desc={nft.metadata.description}\n                number={num}\n                link={nft.cached_file_url}\n              />\n              // <div key={nft.metadata_url} >\n              //     <img src={nft.cached_file_url} alt={nft.collection_id} />\n              // </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default NftGallery;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
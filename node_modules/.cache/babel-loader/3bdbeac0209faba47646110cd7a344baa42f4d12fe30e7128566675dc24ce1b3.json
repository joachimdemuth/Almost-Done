{"ast":null,"code":"var _jsxFileName = \"/Users/joachimdemuth/Desktop/React/website2/src/routes/NftGallery.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Header from \"../components/Header\";\nimport { fetchNfts } from \"../lib/Nfts\";\nimport { useEffect, useState } from 'react';\nimport \"./NftGallery.css\";\nimport NftCard from '../components/NftCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NftGallery() {\n  _s();\n  const [data, setData] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    fetchNfts().then(res => res.json()).then(data => {\n      setData(data);\n      setLoading(false);\n    });\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 27\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 22\n  }, this);\n  const nfts = data.nfts;\n  const sortedNfts = nfts.filter(nft => !nft.collection === null);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      link: \"#\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NFT Gallery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-container\",\n        children: nfts.map(nft => {\n          return /*#__PURE__*/_jsxDEV(NftCard, {\n            url: nft.cached_file_url,\n            title: nft.mint_date,\n            desc: nft.mint_address\n          }, nft.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n          // <div key={nft.metadata_url} >\n          //     <img src={nft.cached_file_url} alt={nft.collection_id} />\n          // </div>\n          ;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n_s(NftGallery, \"YJka7g7FkKqEfFVhCypLPmREhdE=\");\n_c = NftGallery;\nexport default NftGallery;\nvar _c;\n$RefreshReg$(_c, \"NftGallery\");","map":{"version":3,"names":["React","Header","fetchNfts","useEffect","useState","NftCard","NftGallery","data","setData","isLoading","setLoading","then","res","json","nfts","sortedNfts","filter","nft","collection","console","log","map","cached_file_url","mint_date","mint_address","index"],"sources":["/Users/joachimdemuth/Desktop/React/website2/src/routes/NftGallery.jsx"],"sourcesContent":["\nimport React from \"react\";\nimport Header from \"../components/Header\";\nimport { fetchNfts } from \"../lib/Nfts\";\nimport { useEffect, useState } from 'react';\nimport \"./NftGallery.css\"\nimport NftCard from '../components/NftCard'\n\n\n\n\nfunction NftGallery() {\n    const [data, setData] = useState(null)\n    const [isLoading, setLoading] = useState(false)\n\n    useEffect(() => {\n        setLoading(true)\n        fetchNfts().then((res) => res.json())\n        .then((data) => {\n            setData(data)\n            setLoading(false)\n        })\n    }, []);\n\n    if (isLoading) return <p>Loading...</p>\n    if(!data) return <p>No data available</p>\n    const nfts = data.nfts;\n    const sortedNfts = nfts.filter(nft => !nft.collection === null) \n\n    console.log(data)\n\n    return (\n        <>\n        <Header link=\"#\" />\n       <div className=\"container\">\n        <h1>NFT Gallery</h1>\n            <div className=\"nft-container\">\n\n            \n            {nfts.map((nft) => {\n                return(\n                    \n                    <NftCard key={nft.index} url={nft.cached_file_url} title={nft.mint_date} desc={nft.mint_address} />\n                    // <div key={nft.metadata_url} >\n                    //     <img src={nft.cached_file_url} alt={nft.collection_id} />\n                    // </div>\n                    )\n                })}\n            </div>\n                </div>\n\n            </>\n        \n        )\n    \n}\n\nexport default NftGallery;\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,kBAAkB;AACzB,OAAOC,OAAO,MAAM,uBAAuB;AAAA;AAAA;AAK3C,SAASC,UAAU,GAAG;EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACK,SAAS,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACZO,UAAU,CAAC,IAAI,CAAC;IAChBR,SAAS,EAAE,CAACS,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACpCF,IAAI,CAAEJ,IAAI,IAAK;MACZC,OAAO,CAACD,IAAI,CAAC;MACbG,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,SAAS,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAiB;EACvC,IAAG,CAACF,IAAI,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAwB;EACzC,MAAMO,IAAI,GAAGP,IAAI,CAACO,IAAI;EACtB,MAAMC,UAAU,GAAGD,IAAI,CAACE,MAAM,CAACC,GAAG,IAAI,CAACA,GAAG,CAACC,UAAU,KAAK,IAAI,CAAC;EAE/DC,OAAO,CAACC,GAAG,CAACb,IAAI,CAAC;EAEjB,oBACI;IAAA,wBACA,QAAC,MAAM;MAAC,IAAI,EAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eACpB;MAAK,SAAS,EAAC,WAAW;MAAA,wBACzB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eAChB;QAAK,SAAS,EAAC,eAAe;QAAA,UAG7BO,IAAI,CAACO,GAAG,CAAEJ,GAAG,IAAK;UACf,oBAEI,QAAC,OAAO;YAAiB,GAAG,EAAEA,GAAG,CAACK,eAAgB;YAAC,KAAK,EAAEL,GAAG,CAACM,SAAU;YAAC,IAAI,EAAEN,GAAG,CAACO;UAAa,GAAlFP,GAAG,CAACQ,KAAK;YAAA;YAAA;YAAA;UAAA;UACvB;UACA;UACA;UAAA;QAEJ,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACI;EAAA,gBAEP;AAIf;AAAC,GA5CQnB,UAAU;AAAA,KAAVA,UAAU;AA8CnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
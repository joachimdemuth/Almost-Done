{"ast":null,"code":"export const fetchNfts = apiurl => {\n  fetchAllPages(apiurl);\n};\nconst addToken = (base, token) => {\n  const url = new URL(base);\n  const searchParams = new URLSearchParams(url.search);\n  searchParams.set(\"continuation\", \"&\" + token);\n  url.search = searchParams;\n  return url.toString();\n};\nconst fetchAllPages = url => {\n  fetch(url, {\n    headers: {\n      Authorization: process.env.REACT_APP_AUTH_CODE\n    }\n  }).then(res => res.json()).then(items);\n  // .then(({ items, continuation: token }) => {\n\n  // })\n  // token ? fetchAllPages(addToken(url, token)).then((newItems) => [\n  //     ...items,\n  //     ...newItems,\n  // ])\n  // : items\n  // );\n};\n\nexport const continuedFetchNfts = async () => {\n  return fetch(\"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?continuation=Mg%3D%3D&include=metadata\", {\n    headers: {\n      Authorization: process.env.REACT_APP_AUTH_CODE\n    }\n  });\n};","map":{"version":3,"names":["fetchNfts","apiurl","fetchAllPages","addToken","base","token","url","URL","searchParams","URLSearchParams","search","set","toString","fetch","headers","Authorization","process","env","REACT_APP_AUTH_CODE","then","res","json","items","continuedFetchNfts"],"sources":["/Users/joachimdemuth/Desktop/React/website2/src/lib/Nfts.js"],"sourcesContent":["export const fetchNfts = (apiurl) => {\n  fetchAllPages(apiurl)\n\n};\n\nconst addToken = (base, token) => {\n    const url = new URL(base);\n    const searchParams = new URLSearchParams(url.search);\n    searchParams.set(\"continuation\", \"&\"+token);\n    url.search = searchParams;\n    return url.toString();\n};\n\nconst fetchAllPages = (url) => {\n    fetch(url, {\n        headers: {\n            Authorization: process.env.REACT_APP_AUTH_CODE,\n        },\n    })\n    .then((res) => res.json())\n    .then((items))\n    // .then(({ items, continuation: token }) => {\n\n    // })\n    // token ? fetchAllPages(addToken(url, token)).then((newItems) => [\n    //     ...items,\n    //     ...newItems,\n    // ])\n    // : items\n    // );\n};\n\nexport const continuedFetchNfts = async () => {\n  return fetch(\n    \"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?continuation=Mg%3D%3D&include=metadata\",\n    {\n      headers: {\n        Authorization: process.env.REACT_APP_AUTH_CODE,\n      },\n    }\n  );\n};"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAIC,MAAM,IAAK;EACnCC,aAAa,CAACD,MAAM,CAAC;AAEvB,CAAC;AAED,MAAME,QAAQ,GAAG,CAACC,IAAI,EAAEC,KAAK,KAAK;EAC9B,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACH,IAAI,CAAC;EACzB,MAAMI,YAAY,GAAG,IAAIC,eAAe,CAACH,GAAG,CAACI,MAAM,CAAC;EACpDF,YAAY,CAACG,GAAG,CAAC,cAAc,EAAE,GAAG,GAACN,KAAK,CAAC;EAC3CC,GAAG,CAACI,MAAM,GAAGF,YAAY;EACzB,OAAOF,GAAG,CAACM,QAAQ,EAAE;AACzB,CAAC;AAED,MAAMV,aAAa,GAAII,GAAG,IAAK;EAC3BO,KAAK,CAACP,GAAG,EAAE;IACPQ,OAAO,EAAE;MACLC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC;IAC/B;EACJ,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,KAAK,CAAE;EACd;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;;AAED,OAAO,MAAMC,kBAAkB,GAAG,YAAY;EAC5C,OAAOV,KAAK,CACV,gIAAgI,EAChI;IACEC,OAAO,EAAE;MACPC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC;IAC7B;EACF,CAAC,CACF;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
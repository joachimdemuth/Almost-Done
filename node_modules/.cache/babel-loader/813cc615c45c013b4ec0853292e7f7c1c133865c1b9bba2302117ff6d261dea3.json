{"ast":null,"code":"export const fetchNfts = () => {\n  const apiurl = \"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?include=metadata\";\n  fetchAllPages(apiurl).then(console.log()).catch(console.warn());\n};\nconst addToken = (base, token) => {\n  const url = new URL(base);\n  const searchParams = new URLSearchParams(url.search);\n  searchParams.set(\"continuation\", token);\n  url.search = searchParams;\n  return url.toString();\n};\nconst fetchAllPages = url => {\n  fetch(url, {\n    headers: {\n      Authorization: process.env.REACT_APP_AUTH_CODE\n    }\n  }).then(res => res.json()).then(_ref => {\n    let {\n      items,\n      continuation: token\n    } = _ref;\n    return token ? fetchAllPages(addToken(url, token)).then(newItems => [...items, ...newItems]) : items;\n  });\n};\nexport const continuedFetchNfts = async () => {\n  return fetch(\"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?continuation=Mg%3D%3D\", {\n    headers: {\n      Authorization: process.env.REACT_APP_AUTH_CODE\n    }\n  });\n};","map":{"version":3,"names":["fetchNfts","apiurl","fetchAllPages","then","console","log","catch","warn","addToken","base","token","url","URL","searchParams","URLSearchParams","search","set","toString","fetch","headers","Authorization","process","env","REACT_APP_AUTH_CODE","res","json","items","continuation","newItems","continuedFetchNfts"],"sources":["/Users/joachimdemuth/Desktop/React/website2/src/lib/Nfts.js"],"sourcesContent":["export const fetchNfts = () => {\n  const apiurl =\n    \"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?include=metadata\";\n  fetchAllPages(apiurl)\n  .then(console.log())\n  .catch(console.warn());\n};\n\nconst addToken = (base, token) => {\n    const url = new URL(base);\n    const searchParams = new URLSearchParams(url.search);\n    searchParams.set(\"continuation\", token);\n    url.search = searchParams;\n    return url.toString();\n};\n\nconst fetchAllPages = (url) => {\n    fetch(url, {\n        headers: {\n            Authorization: process.env.REACT_APP_AUTH_CODE,\n        },\n    })\n    .then((res) => res.json())\n    .then(({ items, continuation: token }) =>\n    token\n    ? fetchAllPages(addToken(url, token)).then((newItems) => [\n        ...items,\n        ...newItems,\n    ])\n    : items\n    );\n};\n\nexport const continuedFetchNfts = async () => {\n  return fetch(\n    \"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?continuation=Mg%3D%3D\",\n    {\n      headers: {\n        Authorization: process.env.REACT_APP_AUTH_CODE,\n      },\n    }\n  );\n};"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,MAAM;EAC7B,MAAMC,MAAM,GACV,0GAA0G;EAC5GC,aAAa,CAACD,MAAM,CAAC,CACpBE,IAAI,CAACC,OAAO,CAACC,GAAG,EAAE,CAAC,CACnBC,KAAK,CAACF,OAAO,CAACG,IAAI,EAAE,CAAC;AACxB,CAAC;AAED,MAAMC,QAAQ,GAAG,CAACC,IAAI,EAAEC,KAAK,KAAK;EAC9B,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACH,IAAI,CAAC;EACzB,MAAMI,YAAY,GAAG,IAAIC,eAAe,CAACH,GAAG,CAACI,MAAM,CAAC;EACpDF,YAAY,CAACG,GAAG,CAAC,cAAc,EAAEN,KAAK,CAAC;EACvCC,GAAG,CAACI,MAAM,GAAGF,YAAY;EACzB,OAAOF,GAAG,CAACM,QAAQ,EAAE;AACzB,CAAC;AAED,MAAMf,aAAa,GAAIS,GAAG,IAAK;EAC3BO,KAAK,CAACP,GAAG,EAAE;IACPQ,OAAO,EAAE;MACLC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC;IAC/B;EACJ,CAAC,CAAC,CACDpB,IAAI,CAAEqB,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBtB,IAAI,CAAC;IAAA,IAAC;MAAEuB,KAAK;MAAEC,YAAY,EAAEjB;IAAM,CAAC;IAAA,OACrCA,KAAK,GACHR,aAAa,CAACM,QAAQ,CAACG,GAAG,EAAED,KAAK,CAAC,CAAC,CAACP,IAAI,CAAEyB,QAAQ,IAAK,CACrD,GAAGF,KAAK,EACR,GAAGE,QAAQ,CACd,CAAC,GACAF,KAAK;EAAA,EACN;AACL,CAAC;AAED,OAAO,MAAMG,kBAAkB,GAAG,YAAY;EAC5C,OAAOX,KAAK,CACV,+GAA+G,EAC/G;IACEC,OAAO,EAAE;MACPC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC;IAC7B;EACF,CAAC,CACF;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
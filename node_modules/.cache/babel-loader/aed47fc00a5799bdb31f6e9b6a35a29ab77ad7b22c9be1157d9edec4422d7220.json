{"ast":null,"code":"var _jsxFileName = \"/Users/joachimdemuth/Desktop/Almost-Done/src/routes/Spotify.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { BallTriangle } from \"react-loader-spinner\";\nimport { fetchTopArtist } from \"../lib/SpotifyAPI\";\nimport { useEffect, useState } from \"react\";\nimport \"./Spotify.css\";\nimport ArtistCard from \"../components/ArtistCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Spotify() {\n  _s();\n  const [artists, setArtists] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    fetchTopArtist().then(res => res.json()).then(data => {\n      console.log(data);\n      setArtists(data.items);\n    });\n    setLoading(false);\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner-container\",\n        children: /*#__PURE__*/_jsxDEV(BallTriangle, {\n          height: 100,\n          width: 100,\n          radius: 5,\n          color: \"blue\",\n          ariaLabel: \"ball-triangle-loading\",\n          wrapperClass: {},\n          wrapperStyle: \"\",\n          visible: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-text-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Fetching artists..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n  if (!artists) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top artists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-container\",\n        children: artists.map(artist => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(ArtistCard, {\n              url: artist.images[0].url,\n              name: artist.name,\n              link: artist.uri\n            }, artist.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Spotify, \"OY20VL0VYLGC0E7qpzcGtwqUSoI=\");\n_c = Spotify;\nexport default Spotify;\nvar _c;\n$RefreshReg$(_c, \"Spotify\");","map":{"version":3,"names":["React","BallTriangle","fetchTopArtist","useEffect","useState","ArtistCard","Spotify","artists","setArtists","isLoading","setLoading","then","res","json","data","console","log","items","map","artist","images","url","name","uri","id"],"sources":["/Users/joachimdemuth/Desktop/Almost-Done/src/routes/Spotify.jsx"],"sourcesContent":["import React from \"react\";\nimport { BallTriangle } from \"react-loader-spinner\";\nimport { fetchTopArtist } from \"../lib/SpotifyAPI\";\nimport { useEffect, useState } from \"react\";\nimport \"./Spotify.css\";\nimport ArtistCard from \"../components/ArtistCard\";\n\nfunction Spotify() {\n  const [artists, setArtists] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchTopArtist()\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setArtists(data.items);\n      });\n    setLoading(false);\n  }, []);\n\n  if (isLoading)\n    return (\n      <>\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner-container\">\n            <BallTriangle\n              height={100}\n              width={100}\n              radius={5}\n              color=\"blue\"\n              ariaLabel=\"ball-triangle-loading\"\n              wrapperClass={{}}\n              wrapperStyle=\"\"\n              visible={true}\n            />\n          </div>\n          <div className=\"loading-text-container\">\n            <p>Fetching artists..</p>\n          </div>\n        </div>\n      </>\n    );\n  if (!artists) return <p>No data available</p>;\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>Top artists</h1>\n        <div className=\"artist-container\">\n          {artists.map((artist) => {\n            return (\n              <>\n\n                <ArtistCard key={artist.id} url={artist.images[0].url} name={artist.name} link={artist.uri} />\n              </>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Spotify;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,eAAe;AACtB,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAAA;AAElD,SAASC,OAAO,GAAG;EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACK,SAAS,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACdO,UAAU,CAAC,IAAI,CAAC;IAChBR,cAAc,EAAE,CACbS,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBN,UAAU,CAACM,IAAI,CAACG,KAAK,CAAC;IACxB,CAAC,CAAC;IACJP,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,SAAS,EACX,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,mBAAmB;MAAA,wBAChC;QAAK,SAAS,EAAC,2BAA2B;QAAA,uBACxC,QAAC,YAAY;UACX,MAAM,EAAE,GAAI;UACZ,KAAK,EAAE,GAAI;UACX,MAAM,EAAE,CAAE;UACV,KAAK,EAAC,MAAM;UACZ,SAAS,EAAC,uBAAuB;UACjC,YAAY,EAAE,CAAC,CAAE;UACjB,YAAY,EAAC,EAAE;UACf,OAAO,EAAE;QAAK;UAAA;UAAA;UAAA;QAAA;MACd;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAC,wBAAwB;QAAA,uBACrC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAyB;QAAA;QAAA;QAAA;MAAA,QACrB;IAAA;MAAA;MAAA;MAAA;IAAA;EACF,iBACL;EAEP,IAAI,CAACF,OAAO,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAwB;EAE7C,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QAAK,SAAS,EAAC,kBAAkB;QAAA,UAC9BA,OAAO,CAACW,GAAG,CAAEC,MAAM,IAAK;UACvB,oBACE;YAAA,uBAEE,QAAC,UAAU;cAAiB,GAAG,EAAEA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI;cAAC,IAAI,EAAEF,MAAM,CAACG,IAAK;cAAC,IAAI,EAAEH,MAAM,CAACI;YAAI,GAA1EJ,MAAM,CAACK,EAAE;cAAA;cAAA;cAAA;YAAA;UAAoE,iBAC7F;QAEP,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA;EACF,iBACL;AAEP;AAAC,GAxDQlB,OAAO;AAAA,KAAPA,OAAO;AA0DhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
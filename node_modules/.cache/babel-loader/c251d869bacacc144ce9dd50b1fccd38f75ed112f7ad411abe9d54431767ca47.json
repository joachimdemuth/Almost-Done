{"ast":null,"code":"export const fetchNfts = async () => {\n  return fetch(\"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?include=metadata\", {\n    headers: {\n      Authorization: process.env.REACT_APP_AUTH_CODE\n    }\n  });\n};\nexport const continuedFetchNfts = async () => {\n  return fetch(\"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?continuation=Mg%3D%3D\", {\n    headers: {\n      Authorization: process.env.REACT_APP_AUTH_CODE\n    }\n  });\n};\nconst addToken = (base, token) => {\n  const url = new URL(base);\n  const searchParams = new URLSearchParams(url.search);\n  searchParams.set(\"continuation\", token);\n  url.search = searchParams;\n  return url.toString();\n};\nconst fetchAllPages = url => {\n  fetch(url, {\n    headers: {\n      Authorization: process.env.REACT_APP_AUTH_CODE\n    }\n  }).then(res => res.json()).then(_ref => {\n    let {\n      items,\n      continuation: token\n    } = _ref;\n    return token ? fetchAllPages(addToken(url, token)).then(newItems => [...items, ...newItems]) : items;\n  });\n};","map":{"version":3,"names":["fetchNfts","fetch","headers","Authorization","process","env","REACT_APP_AUTH_CODE","continuedFetchNfts","addToken","base","token","url","URL","searchParams","URLSearchParams","search","set","toString","fetchAllPages","then","res","json","items","continuation","newItems"],"sources":["/Users/joachimdemuth/Desktop/React/website2/src/lib/Nfts.js"],"sourcesContent":["export const fetchNfts = async () => {\n  return fetch(\n    \"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?include=metadata\",\n    {\n      headers: {\n        Authorization: process.env.REACT_APP_AUTH_CODE,\n      },\n    }\n  );\n};\n\nexport const continuedFetchNfts = async () => {\n  return fetch(\n    \"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?continuation=Mg%3D%3D\",\n    {\n      headers: {\n        Authorization: process.env.REACT_APP_AUTH_CODE,\n      },\n    }\n  );\n};\n\nconst addToken = (base, token) => {\n  const url = new URL(base);\n  const searchParams = new URLSearchParams(url.search);\n  searchParams.set(\"continuation\", token);\n  url.search = searchParams;\n  return url.toString();\n};\n\nconst fetchAllPages = (url) => {\n  fetch(url, \n    {\n        headers: {\n          Authorization: process.env.REACT_APP_AUTH_CODE,\n        },\n     } )\n    .then((res) => res.json())\n    .then(({ items, continuation: token }) =>\n      token\n        ? fetchAllPages(addToken(url, token)).then((newItems) => [\n            ...items,\n            ...newItems,\n          ])\n        : items\n    );\n};\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,YAAY;EACnC,OAAOC,KAAK,CACV,0GAA0G,EAC1G;IACEC,OAAO,EAAE;MACPC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC;IAC7B;EACF,CAAC,CACF;AACH,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,YAAY;EAC5C,OAAON,KAAK,CACV,+GAA+G,EAC/G;IACEC,OAAO,EAAE;MACPC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC;IAC7B;EACF,CAAC,CACF;AACH,CAAC;AAED,MAAME,QAAQ,GAAG,CAACC,IAAI,EAAEC,KAAK,KAAK;EAChC,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACH,IAAI,CAAC;EACzB,MAAMI,YAAY,GAAG,IAAIC,eAAe,CAACH,GAAG,CAACI,MAAM,CAAC;EACpDF,YAAY,CAACG,GAAG,CAAC,cAAc,EAAEN,KAAK,CAAC;EACvCC,GAAG,CAACI,MAAM,GAAGF,YAAY;EACzB,OAAOF,GAAG,CAACM,QAAQ,EAAE;AACvB,CAAC;AAED,MAAMC,aAAa,GAAIP,GAAG,IAAK;EAC7BV,KAAK,CAACU,GAAG,EACP;IACIT,OAAO,EAAE;MACPC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC;IAC7B;EACH,CAAC,CAAE,CACHa,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAC;IAAA,IAAC;MAAEG,KAAK;MAAEC,YAAY,EAAEb;IAAM,CAAC;IAAA,OACnCA,KAAK,GACDQ,aAAa,CAACV,QAAQ,CAACG,GAAG,EAAED,KAAK,CAAC,CAAC,CAACS,IAAI,CAAEK,QAAQ,IAAK,CACrD,GAAGF,KAAK,EACR,GAAGE,QAAQ,CACZ,CAAC,GACFF,KAAK;EAAA,EACV;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
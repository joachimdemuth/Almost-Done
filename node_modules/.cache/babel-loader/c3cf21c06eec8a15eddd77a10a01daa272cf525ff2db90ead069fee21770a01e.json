{"ast":null,"code":"export const fetchNfts = () => {\n  // fetchAllPages(apiurl);\n\n  return fetch(\"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?include=metadata\", {\n    headers: {\n      Authorization: process.env.REACT_APP_AUTH_CODE\n    }\n  });\n};\nexport const continuedFetchNfts = async () => {\n  return fetch(\"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?include=metadata&continuation=Mg%3D%3D\", {\n    headers: {\n      Authorization: process.env.REACT_APP_AUTH_CODE\n    }\n  });\n};\n\n// const addToken = (base, token) => {\n//   const url = new URL(base);\n//   const searchParams = new URLSearchParams(url.search);\n//   searchParams.set(\"continuation\", token);\n//   url.search = searchParams;\n//   console.log(url.toString());\n//   return url.toString();\n// };\n\n// const fetchAllPages = (url) => {\n//   fetch(url, {\n//     headers: {\n//       Authorization: process.env.REACT_APP_AUTH_CODE,\n//     },\n//   })\n//     .then((res) => res.json())\n//     .then(\n//       ({ items, continuation: token }) => setTimeout(() => {\n\n//           token\n//             ? fetchAllPages(addToken(url, token)).then((newItems) => console.log(newItems))\n//             : console.log(\"no token\")\n//       })\n//       // token ? fetchAllPages(addToken(url, token))\n//       // .then((newItems) => console.log(newItems)) : console.log(\"no data\")\n//     );\n\n//   // token ? fetchAllPages(addToken(url, token)).then((newItems) => [\n//   //     ...items,\n//   //     ...newItems,\n//   // ])\n//   // : items\n//   // );\n// };","map":{"version":3,"names":["fetchNfts","fetch","headers","Authorization","process","env","REACT_APP_AUTH_CODE","continuedFetchNfts"],"sources":["/Users/joachimdemuth/Desktop/Almost-Done/src/lib/Nfts.js"],"sourcesContent":["export const fetchNfts = () => {\n  // fetchAllPages(apiurl);\n\n  return fetch(\n    \"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?include=metadata\",\n    {\n      headers: {\n        Authorization: process.env.REACT_APP_AUTH_CODE,\n      },\n    }\n  );\n};\n\nexport const continuedFetchNfts = async () => {\n  return fetch(\n    \"https://api.nftport.xyz/v0/solana/accounts/558acsgeuPDFQwdCTM8LWjgyiiZCPyoS9iXts1KAWRCW?include=metadata&continuation=Mg%3D%3D\",\n    {\n      headers: {\n        Authorization: process.env.REACT_APP_AUTH_CODE,\n      },\n    }\n  );\n};\n\n// const addToken = (base, token) => {\n//   const url = new URL(base);\n//   const searchParams = new URLSearchParams(url.search);\n//   searchParams.set(\"continuation\", token);\n//   url.search = searchParams;\n//   console.log(url.toString());\n//   return url.toString();\n// };\n\n// const fetchAllPages = (url) => {\n//   fetch(url, {\n//     headers: {\n//       Authorization: process.env.REACT_APP_AUTH_CODE,\n//     },\n//   })\n//     .then((res) => res.json())\n//     .then(\n//       ({ items, continuation: token }) => setTimeout(() => {\n\n//           token\n//             ? fetchAllPages(addToken(url, token)).then((newItems) => console.log(newItems))\n//             : console.log(\"no token\")\n//       })\n//       // token ? fetchAllPages(addToken(url, token))\n//       // .then((newItems) => console.log(newItems)) : console.log(\"no data\")\n//     );\n\n//   // token ? fetchAllPages(addToken(url, token)).then((newItems) => [\n//   //     ...items,\n//   //     ...newItems,\n//   // ])\n//   // : items\n//   // );\n// };\n\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,MAAM;EAC7B;;EAEA,OAAOC,KAAK,CACV,0GAA0G,EAC1G;IACEC,OAAO,EAAE;MACPC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC;IAC7B;EACF,CAAC,CACF;AACH,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,YAAY;EAC5C,OAAON,KAAK,CACV,gIAAgI,EAChI;IACEC,OAAO,EAAE;MACPC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC;IAC7B;EACF,CAAC,CACF;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}